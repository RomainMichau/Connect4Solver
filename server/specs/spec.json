{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of our connect4 API.",
    "title": "connect4 API.",
    "version": "1.0.0"
  },
  "paths": {
    "/api/configuration": {
      "get": {
        "tags": [
          "game"
        ],
        "operationId": "get_configuration",
        "responses": {
          "200": {
            "$ref": "#/responses/ConfigurationResponse"
          }
        }
      }
    },
    "/api/grid": {
      "get": {
        "description": "Return the current grid the game",
        "tags": [
          "game"
        ],
        "operationId": "getGrid",
        "responses": {
          "200": {
            "$ref": "#/responses/GetGridResponse"
          }
        }
      }
    },
    "/api/grid/reset": {
      "post": {
        "tags": [
          "game"
        ],
        "operationId": "resetGame",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/solver/minimax": {
      "get": {
        "tags": [
          "game"
        ],
        "operationId": "minimax",
        "parameters": [
          {
            "type": "integer",
            "description": "depth of the minimax",
            "name": "depth",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/MiniMaxiResponse"
          }
        }
      }
    },
    "/api/token": {
      "post": {
        "tags": [
          "game"
        ],
        "operationId": "postToken",
        "parameters": [
          {
            "type": "integer",
            "description": "Column to add the token",
            "name": "column",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddTokenResponse"
          },
          "400": {
            "$ref": "#/responses/BadRequestError"
          }
        }
      }
    }
  },
  "definitions": {
    "AddTokenResponseBody": {
      "type": "object",
      "required": [
        "line",
        "column",
        "added_cell",
        "next_player",
        "player_won",
        "is_grid_full",
        "current_player"
      ],
      "properties": {
        "added_cell": {
          "$ref": "#/definitions/Cell"
        },
        "column": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Column"
        },
        "current_player": {
          "$ref": "#/definitions/Player"
        },
        "is_grid_full": {
          "type": "boolean",
          "x-go-name": "IsGridFull"
        },
        "line": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Line"
        },
        "next_player": {
          "$ref": "#/definitions/Player"
        },
        "player_won": {
          "type": "boolean",
          "x-go-name": "PlayerWon"
        }
      },
      "x-go-package": "connect4solver"
    },
    "BadRequestErrorBody": {
      "type": "object",
      "required": [
        "reason"
      ],
      "properties": {
        "reason": {
          "type": "string",
          "x-go-name": "Reason"
        }
      },
      "x-go-package": "connect4solver"
    },
    "Cell": {
      "type": "integer",
      "format": "int64",
      "x-go-package": "connect4solver/game"
    },
    "ConfigurationBody": {
      "type": "object",
      "required": [
        "github_url",
        "title",
        "related_links"
      ],
      "properties": {
        "github_url": {
          "type": "string",
          "x-go-name": "GithubUrl"
        },
        "related_links": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "RelatedLinks"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "connect4solver"
    },
    "GetGridResponseBody": {
      "type": "object",
      "required": [
        "grid",
        "current_player_color"
      ],
      "properties": {
        "current_player_color": {
          "$ref": "#/definitions/Player"
        },
        "grid": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cell"
            }
          },
          "x-go-name": "Grid"
        }
      },
      "x-go-package": "connect4solver"
    },
    "MiniMaxiResponseBody": {
      "type": "object",
      "required": [
        "best_move",
        "scores"
      ],
      "properties": {
        "best_move": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "BestMove"
        },
        "scores": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-go-name": "Scores"
        }
      },
      "x-go-package": "connect4solver"
    },
    "Player": {
      "type": "integer",
      "format": "int64",
      "x-go-package": "connect4solver/game"
    }
  },
  "responses": {
    "AddTokenResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/AddTokenResponseBody"
      }
    },
    "BadRequestError": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/BadRequestErrorBody"
      }
    },
    "ConfigurationResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ConfigurationBody"
      }
    },
    "GetGridResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/GetGridResponseBody"
      }
    },
    "MiniMaxiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/MiniMaxiResponseBody"
      }
    }
  }
}